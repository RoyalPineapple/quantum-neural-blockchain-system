input {
  beats {
    port => 5044
  }
  
  http {
    port => 8080
  }
  
  tcp {
    port => 5000
    codec => json
  }
}

filter {
  if [type] == "quantum" {
    json {
      source => "message"
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  if [type] == "neural" {
    json {
      source => "message"
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  if [type] == "blockchain" {
    json {
      source => "message"
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  if [type] == "financial" {
    json {
      source => "message"
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  if [type] == "optimization" {
    json {
      source => "message"
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # Add system metrics
  if [type] == "metric" {
    metrics {
      meter => [ "events" ]
      add_tag => [ "metric" ]
    }
  }
  
  # Add geolocation data if available
  if [clientip] {
    geoip {
      source => "clientip"
      target => "geoip"
    }
  }
  
  # Add user agent information
  if [agent] {
    useragent {
      source => "agent"
      target => "useragent"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "quantum-monitoring-%{+YYYY.MM.dd}"
    document_type => "%{type}"
  }
  
  # Output specific metrics to InfluxDB
  if [type] == "metric" {
    influxdb {
      host => "influxdb"
      port => 8086
      database => "quantum_metrics"
      measurement => "system_metrics"
      codec => line
    }
  }
  
  # Output important events to Kafka
  if [level] == "error" or [level] == "warning" {
    kafka {
      bootstrap_servers => "kafka:9092"
      topic_id => "quantum_alerts"
      codec => json
    }
  }
  
  # Debug output
  stdout {
    codec => rubydebug
  }
}
